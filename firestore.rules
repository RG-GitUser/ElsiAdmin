rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      // A user can get their own document.
      allow get: if request.auth != null && request.auth.uid == userId;
      // Any authenticated user can list the documents in the users collection for the 'Users' page.
      allow list: if request.auth != null;
      // A user can update their own document.
      allow update: if request.auth != null && request.auth.uid == userId;
      // Only administrators can create or delete other users.
      allow create, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Administrator';
    }

    match /templates/{templateId} {
        // A user can create a template.
        allow create: if request.auth != null;
        // A user can read, update, or delete a template if they are the owner.
        // This rule also allows the client to query for templates they own, as long as the query
        // includes a `where('owner', '==', request.auth.uid)` clause.
        allow read, update, delete: if request.auth != null && resource.data.owner == request.auth.uid;
    }
  }
}